# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: a-ingress

---
# ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: a-ingress-nginx
  namespace: a-ingress

---
# ClusterRoleBinding (cluster-admin 권한 부여)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: a-ingress-nginx-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: a-ingress-nginx
    namespace: a-ingress

---
# Secret for ServiceAccount token (Kubernetes >= 1.24)
apiVersion: v1
kind: Secret
metadata:
  name: a-ingress-nginx-token
  namespace: a-ingress
  annotations:
    kubernetes.io/service-account.name: a-ingress-nginx
type: kubernetes.io/service-account-token

---
# Ingress Controller Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: a-ingress-nginx-controller
  namespace: a-ingress
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/component: controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/component: controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/component: controller
    spec:
      serviceAccountName: a-ingress-nginx
      containers:
        - name: controller
          image: registry.k8s.io/ingress-nginx/controller:v1.10.1
          imagePullPolicy: IfNotPresent
          args:
            - /nginx-ingress-controller
            - --election-id=a-ingress-nginx-leader
            - --ingress-class=a-ingress-nginx
            - --ingress-class-by-name=true
            - --controller-class=a-ingress-nginx/controller
            - --publish-service=a-ingress/a-ingress-nginx-controller
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
            - containerPort: 443
              name: https
              protocol: TCP

---
# MetalLB IPAddressPool (192.100.100.53 사용)
apiVersion: metallb.io/v1beta1
kind: IPAddressPool
metadata:
  name: a-ingress-pool
  namespace: metallb-system
spec:
  addresses:
    - 192.100.100.54/32

---
# MetalLB L2Advertisement (L2 브로드캐스트 활성화)
apiVersion: metallb.io/v1beta1
kind: L2Advertisement
metadata:
  name: advertise-a-ingress
  namespace: metallb-system
spec:
  ipAddressPools:
    - a-ingress-pool

---
# LoadBalancer Service (MetalLB IPPool에서 IP 할당)
apiVersion: v1
kind: Service
metadata:
  name: a-ingress-nginx-controller
  namespace: a-ingress
  annotations:
    metallb.universe.tf/address-pool: a-ingress-pool
spec:
  type: LoadBalancer
  loadBalancerIP: 192.100.100.54
  selector:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/component: controller
  ports:
    - name: http
      port: 80
      targetPort: http
    - name: https
      port: 443
      targetPort: https
