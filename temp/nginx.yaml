apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx1-deployment
  labels:
    app: nginx-worker1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-worker1
  template:
    metadata:
      labels:
        app: nginx-worker1
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: nginx1-service
spec:
  selector:
    app: nginx-worker1
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  type: ClusterIP


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx2-deployment
  labels:
    app: nginx-worker2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-worker2
  template:
    metadata:
      labels:
        app: nginx-worker2
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: nginx2-service
spec:
  selector:
    app: nginx-worker2
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx  # 이 부분 추가
  rules:
  - host: example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx1-service
            port:
              number: 80
      - path: /app
        pathType: Prefix
        backend:
          service:
            name: nginx2-service
            port:
              number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  type: LoadBalancer
  loadBalancerIP: 192.100.100.54   # ← 여기로 강제 지정
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP


